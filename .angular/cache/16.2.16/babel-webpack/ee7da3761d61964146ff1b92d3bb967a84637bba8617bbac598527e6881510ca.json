{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/service/form-service.service\";\nimport * as i3 from \"@angular/common/http\";\nexport class DashboardComponent {\n  constructor(router, userserv, http) {\n    this.router = router;\n    this.userserv = userserv;\n    this.http = http;\n    this.users = [];\n    this.today = new Date();\n    this.isCollapsed = false;\n    this.cards = [{\n      title: 'Total Courses',\n      value: 38,\n      icon: 'bi bi-book-fill',\n      bgClass: 'bg-primary'\n    }, {\n      title: 'Total Students',\n      value: 512,\n      icon: 'bi bi-people-fill',\n      bgClass: 'bg-success'\n    }, {\n      title: 'Mentors',\n      value: 14,\n      icon: 'bi bi-person-video3',\n      bgClass: 'bg-warning text-dark'\n    }, {\n      title: 'Reports',\n      value: 8,\n      icon: 'bi bi-bar-chart-fill',\n      bgClass: 'bg-danger'\n    }];\n  }\n  ngOnInit() {\n    this.loadLoggedUsers();\n    this.http.get('http://localhost:3000/users').subscribe(res => {\n      this.users = res.map(user => ({\n        ...user,\n        loginTime: user.loginTime ? new Date(user.loginTime) : null\n      }));\n    });\n  }\n  logout() {\n    localStorage.removeItem('isLoggedIn');\n    this.router.navigate(['/login']);\n  }\n  loadLoggedUsers() {\n    this.userserv.getLoggedUsers().subscribe({\n      next: data => this.users = data,\n      error: err => console.error('Error fetching users', err)\n    });\n  }\n  toggleSidebar() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n  static {\n    this.Éµfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ÉµÉµdirectiveInject(i1.Router), i0.ÉµÉµdirectiveInject(i2.FormServiceService), i0.ÉµÉµdirectiveInject(i3.HttpClient));\n    };\n  }\n  static {\n    this.Éµcmp = /*@__PURE__*/i0.ÉµÉµdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 1,\n      vars: 0,\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ÉµÉµtext(0, \" -->\");\n        }\n      },\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["DashboardComponent","constructor","router","userserv","http","users","today","Date","isCollapsed","cards","title","value","icon","bgClass","ngOnInit","loadLoggedUsers","get","subscribe","res","map","user","loginTime","logout","localStorage","removeItem","navigate","getLoggedUsers","next","data","error","err","console","toggleSidebar","i0","ÉµÉµdirectiveInject","i1","Router","i2","FormServiceService","i3","HttpClient","selectors","decls","vars","template","DashboardComponent_Template","rf","ctx","ÉµÉµtext"],"sources":["C:\\Users\\rocks\\OneDrive\\Desktop\\Angular\\AngularForm\\src\\app\\Components\\admin\\dashboard\\dashboard.component.ts","C:\\Users\\rocks\\OneDrive\\Desktop\\Angular\\AngularForm\\src\\app\\Components\\admin\\dashboard\\dashboard.component.html"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormServiceService } from 'src/app/service/form-service.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private router: Router, private userserv: FormServiceService, private http: HttpClient) { }\n\n  users: any[] = [];\n  today: Date = new Date();\n  ngOnInit(): void {\n    this.loadLoggedUsers();\n    this.http.get<any[]>('http://localhost:3000/users').subscribe((res) => {\n      this.users = res.map(user => ({\n        ...user,\n        loginTime: user.loginTime ? new Date(user.loginTime) : null\n      }));\n    })\n\n  }\n\n  logout() {\n    localStorage.removeItem('isLoggedIn');\n    this.router.navigate(['/login']);\n  }\n\n  loadLoggedUsers() {\n    this.userserv.getLoggedUsers().subscribe({\n      next: (data) => this.users = data,\n\n      error: (err) => console.error('Error fetching users', err)\n    });\n  }\n  isCollapsed = false;\n\n  cards = [\n    { title: 'Total Courses', value: 38, icon: 'bi bi-book-fill', bgClass: 'bg-primary' },\n    { title: 'Total Students', value: 512, icon: 'bi bi-people-fill', bgClass: 'bg-success' },\n    { title: 'Mentors', value: 14, icon: 'bi bi-person-video3', bgClass: 'bg-warning text-dark' },\n    { title: 'Reports', value: 8, icon: 'bi bi-bar-chart-fill', bgClass: 'bg-danger' }\n  ];\n\n  toggleSidebar() {\n    this.isCollapsed = !this.isCollapsed;\n  }\n\n\n\n}\n\n\n","<!-- <div class=\"d-flex bg-white\" [ngClass]=\"{ 'toggled': isCollapsed }\" id=\"wrapper\">\n\n     Sidebar -->\n<!-- <div class=\"bg-secondary border-end text-white sidebar\" id=\"sidebar-wrapper\">\n        <div class=\"sidebar-heading text-center py-4 fs-4 fw-bold text-uppercase border-bottom\">\n            <i class=\"bi bi-mortarboard-fill me-2\"></i>EduPortal Admin\n        </div>\n        <div class=\"list-group list-group-flush my-3\">\n            <a href=\"#\" class=\"list-group-item list-group-item-action bg-dark text-white\">\n                <i class=\"bi bi-house-door-fill me-2\"></i>Dashboard\n            </a>\n            <a href=\"#\" class=\"list-group-item list-group-item-action bg-dark text-white\">\n                <i class=\"bi bi-book-fill me-2\"></i>Manage Courses\n            </a>\n            <a href=\"#\" class=\"list-group-item list-group-item-action bg-dark text-white\">\n                <i class=\"bi bi-people-fill me-2\"></i>Manage Users\n            </a>\n            <a href=\"#\" class=\"list-group-item list-group-item-action bg-dark text-white\">\n                <i class=\"bi bi-clipboard-data-fill me-2\"></i>Reports\n            </a>\n            <a href=\"#\" class=\"list-group-item list-group-item-action bg-dark text-white\">\n                <i class=\"bi bi-person-circle me-2\"></i>Profile\n            </a>\n            <button class=\"btn btn-danger w-75 mt-3 ms-3\" (click)=\"logout()\">Logout</button>\n        </div>\n    </div>\n\n    <!-- Page Content -->\n<!-- <div id=\"page-content-wrapper\" class=\"w-100\">\n\n        <nav class=\"navbar navbar-expand-lg navbar-light bg-light border-bottom px-3\">\n            <button class=\"btn btn-outline-primary\" (click)=\"toggleSidebar()\">\n                <i class=\"bi bi-list\"></i>\n            </button>\n            <span class=\"navbar-brand ms-3\">Admin Dashboard</span>\n        </nav>\n\n        <div class=\"container-fluid p-4\">\n            <h2 class=\"mb-4\">Welcome back, Admin!</h2>\n\n        </div>\n\n\n        <h4 class=\"mb-3\">ðŸ“š Course Insights</h4>\n        <div class=\"row g-4 mb-4\">\n            <div class=\"col-md-4\">\n                <div class=\"card bg-info text-white\">\n                    <div class=\"card-body\">\n                        <h5><i class=\"bi bi-journal-bookmark-fill me-2\"></i>Total Courses</h5>\n                        <h3>120</h3>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <div class=\"card bg-success text-white\">\n                    <div class=\"card-body\">\n                        <h5><i class=\"bi bi-check-circle-fill me-2\"></i>Active Courses</h5>\n                        <h3>95</h3>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <div class=\"card bg-warning text-dark\">\n                    <div class=\"card-body\">\n                        <h5><i class=\"bi bi-hourglass-split me-2\"></i>Pending Approvals</h5>\n                        <h3>25</h3>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <div class=\"card bg-primary text-white\">\n                    <div class=\"card-body\">\n                        <h5><i class=\"bi bi-tags-fill me-2\"></i>Categories</h5>\n                        <h3>8</h3>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <div class=\"card bg-secondary text-white\">\n                    <div class=\"card-body\">\n                        <h5><i class=\"bi bi-person-lines-fill me-2\"></i>Enrollments</h5>\n                        <h3>2,540</h3>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"col-md-4\">\n                <div class=\"card bg-danger text-white\">\n                    <div class=\"card-body\">\n                        <h5><i class=\"bi bi-chat-dots-fill me-2\"></i>Course Reviews</h5>\n                        <h3>346</h3>\n                    </div>\n                </div>\n            </div>\n        </div>  -->\n\n\n\n<!--UserList -->\n<!-- <div class=\"container mt-4\">\n            <h3 class=\"mb-3\">Logged-in Users</h3>\n            <table class=\"table table-bordered table-striped\">\n                <thead>\n                    <tr>\n                        <th>#</th>\n                        <th>Name</th>\n                        <th>Email</th>\n                        <th>Login Time</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <tr *ngFor=\"let user of users; let i = index\">\n                        <td>{{ i + 1 }}</td>\n                        <td>{{ user.name }}</td>\n                        <td>{{ user.email }}</td>\n                        <td>{{user.loginTime ? (user.loginTime | date:'short'): 'Not logged in'}}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div> -->\n<!-- Footer -->\n<!-- <footer class=\"bg-light border-top mt-auto py-3 text-center shadow-sm\">\n            <div class=\"container\">\n                <span class=\"text-muted\">\n                    Â© 2025 EduPortal Admin Panel | Developed by <strong>Your Name</strong>\n                </span>\n            </div>\n        </footer> --> -->"],"mappings":";;;;AAUA,OAAM,MAAOA,kBAAkB;EAE7BC,YAAoBC,MAAc,EAAUC,QAA4B,EAAUC,IAAgB;IAA9E,KAAAF,MAAM,GAANA,MAAM;IAAkB,KAAAC,QAAQ,GAARA,QAAQ;IAA8B,KAAAC,IAAI,GAAJA,IAAI;IAEtF,KAAAC,KAAK,GAAU,EAAE;IACjB,KAAAC,KAAK,GAAS,IAAIC,IAAI,EAAE;IAwBxB,KAAAC,WAAW,GAAG,KAAK;IAEnB,KAAAC,KAAK,GAAG,CACN;MAAEC,KAAK,EAAE,eAAe;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,iBAAiB;MAAEC,OAAO,EAAE;IAAY,CAAE,EACrF;MAAEH,KAAK,EAAE,gBAAgB;MAAEC,KAAK,EAAE,GAAG;MAAEC,IAAI,EAAE,mBAAmB;MAAEC,OAAO,EAAE;IAAY,CAAE,EACzF;MAAEH,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE,EAAE;MAAEC,IAAI,EAAE,qBAAqB;MAAEC,OAAO,EAAE;IAAsB,CAAE,EAC7F;MAAEH,KAAK,EAAE,SAAS;MAAEC,KAAK,EAAE,CAAC;MAAEC,IAAI,EAAE,sBAAsB;MAAEC,OAAO,EAAE;IAAW,CAAE,CACnF;EAlCqG;EAItGC,QAAQA,CAAA;IACN,IAAI,CAACC,eAAe,EAAE;IACtB,IAAI,CAACX,IAAI,CAACY,GAAG,CAAQ,6BAA6B,CAAC,CAACC,SAAS,CAAEC,GAAG,IAAI;MACpE,IAAI,CAACb,KAAK,GAAGa,GAAG,CAACC,GAAG,CAACC,IAAI,KAAK;QAC5B,GAAGA,IAAI;QACPC,SAAS,EAAED,IAAI,CAACC,SAAS,GAAG,IAAId,IAAI,CAACa,IAAI,CAACC,SAAS,CAAC,GAAG;OACxD,CAAC,CAAC;IACL,CAAC,CAAC;EAEJ;EAEAC,MAAMA,CAAA;IACJC,YAAY,CAACC,UAAU,CAAC,YAAY,CAAC;IACrC,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAV,eAAeA,CAAA;IACb,IAAI,CAACZ,QAAQ,CAACuB,cAAc,EAAE,CAACT,SAAS,CAAC;MACvCU,IAAI,EAAGC,IAAI,IAAK,IAAI,CAACvB,KAAK,GAAGuB,IAAI;MAEjCC,KAAK,EAAGC,GAAG,IAAKC,OAAO,CAACF,KAAK,CAAC,sBAAsB,EAAEC,GAAG;KAC1D,CAAC;EACJ;EAUAE,aAAaA,CAAA;IACX,IAAI,CAACxB,WAAW,GAAG,CAAC,IAAI,CAACA,WAAW;EACtC;;;uBAxCWR,kBAAkB,EAAAiC,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,kBAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,UAAA;IAAA;EAAA;;;YAAlBxC,kBAAkB;MAAAyC,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCyHTb,EAAA,CAAAe,MAAA,WAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}