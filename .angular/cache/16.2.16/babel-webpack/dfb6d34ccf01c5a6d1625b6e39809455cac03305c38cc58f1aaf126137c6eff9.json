{"ast":null,"code":"\"use strict\";\n\n// import { Injectable } from '@angular/core';\n// import { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class authGuard implements CanActivate {\n//   constructor(private router: Router) { }\n//   canActivate(route: ActivatedRouteSnapshot): boolean {\n//     const expectedRole = route.data['role'];  // ðŸ‘ˆ from route\n//     const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n//     const currentRole = localStorage.getItem('role');  // 'admin' or 'user'\n//     if (isLoggedIn && currentRole === expectedRole) {\n//       return true;\n//     } else {\n//       alert(\"Access Denied\");\n//       this.router.navigate(['/login']);\n//       return false;\n//     }\n//   }\n// }","map":{"version":3,"names":[],"sources":["C:\\Users\\rocks\\OneDrive\\Desktop\\Angular\\AngularForm\\src\\app\\Components\\Auth\\auth-guard.guard.ts"],"sourcesContent":["// import { Injectable } from '@angular/core';\n// import { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\n\n// @Injectable({\n//   providedIn: 'root'\n// })\n// export class authGuard implements CanActivate {\n\n//   constructor(private router: Router) { }\n\n//   canActivate(route: ActivatedRouteSnapshot): boolean {\n//     const expectedRole = route.data['role'];  // ðŸ‘ˆ from route\n//     const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n//     const currentRole = localStorage.getItem('role');  // 'admin' or 'user'\n\n//     if (isLoggedIn && currentRole === expectedRole) {\n//       return true;\n//     } else {\n//       alert(\"Access Denied\");\n//       this.router.navigate(['/login']);\n//       return false;\n//     }\n//   }\n// }\n"],"mappings":";;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}