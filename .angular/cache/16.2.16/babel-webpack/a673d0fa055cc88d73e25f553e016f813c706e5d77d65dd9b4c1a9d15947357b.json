{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport class authGuard {\n  static {\n    this.Éµfac = function authGuard_Factory(t) {\n      return new (t || authGuard)();\n    };\n  }\n  static {\n    this.Éµprov = /*@__PURE__*/i0.ÉµÉµdefineInjectable({\n      token: authGuard,\n      factory: authGuard.Éµfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["authGuard","factory","Éµfac","providedIn"],"sources":["C:\\Users\\rocks\\OneDrive\\Desktop\\Angular\\AngularForm\\src\\app\\Components\\Auth\\auth-guard.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class authGuard implements CanActivate {\n\n//   constructor(private router: Router) { }\n\n//   canActivate(route: ActivatedRouteSnapshot): boolean {\n//     const expectedRole = route.data['role'];  // ðŸ‘ˆ from route\n//     const isLoggedIn = localStorage.getItem('isLoggedIn') === 'true';\n//     const currentRole = localStorage.getItem('role');  // 'admin' or 'user'\n\n//     if (isLoggedIn && currentRole === expectedRole) {\n//       return true;\n//     } else {\n//       alert(\"Access Denied\");\n//       this.router.navigate(['/login']);\n//       return false;\n//     }\n//   }\n// }\n"],"mappings":";AAMA,OAAM,MAAOA,SAAS;;;uBAATA,SAAS;IAAA;EAAA;;;aAATA,SAAS;MAAAC,OAAA,EAATD,SAAS,CAAAE,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}