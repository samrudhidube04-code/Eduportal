{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/router\";\nfunction ForgetpassComponent_small_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"small\", 12);\n    i0.ɵɵtext(1, \" Valid email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class ForgetpassComponent {\n  constructor(fb) {\n    this.fb = fb;\n    this.submitted = false;\n    this.forgotForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n  onSubmit() {\n    this.submitted = true;\n    if (this.forgotForm.valid) {\n      const email = this.forgotForm.value.email;\n      console.log('Reset link sent to:', email);\n      alert('Password reset link has been sent to your email!');\n      this.forgotForm.reset();\n      this.submitted = false;\n    }\n  }\n  static {\n    this.ɵfac = function ForgetpassComponent_Factory(t) {\n      return new (t || ForgetpassComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ForgetpassComponent,\n      selectors: [[\"app-forgetpass\"]],\n      decls: 17,\n      vars: 3,\n      consts: [[1, \"container\", \"d-flex\", \"align-items-center\", \"justify-content-center\", \"min-vh-100\", \"bg-light\"], [1, \"card\", \"shadow-lg\", \"p-4\", \"rounded-4\", 2, \"width\", \"100%\", \"max-width\", \"450px\"], [1, \"text-center\", \"mb-3\"], [1, \"text-center\", \"text-muted\", \"mb-4\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"mb-3\"], [1, \"form-label\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Enter your email\", 1, \"form-control\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\", \"rounded-pill\", 3, \"disabled\"], [1, \"text-center\", \"mt-3\", \"text-muted\"], [\"routerLink\", \"/login\"], [1, \"text-danger\"]],\n      template: function ForgetpassComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\", 2);\n          i0.ɵɵtext(3, \"Forgot Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"p\", 3);\n          i0.ɵɵtext(5, \"Enter your email and we'll send you a reset link.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"form\", 4);\n          i0.ɵɵlistener(\"ngSubmit\", function ForgetpassComponent_Template_form_ngSubmit_6_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n          i0.ɵɵtext(9, \"Email address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(10, \"input\", 7);\n          i0.ɵɵtemplate(11, ForgetpassComponent_small_11_Template, 2, 0, \"small\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"button\", 9);\n          i0.ɵɵtext(13, \" Send Reset Link \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"p\", 10)(15, \"a\", 11);\n          i0.ɵɵtext(16, \"Back to Login\");\n          i0.ɵɵelementEnd()()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"formGroup\", ctx.forgotForm);\n          i0.ɵɵadvance(5);\n          i0.ɵɵproperty(\"ngIf\", ctx.submitted && ((tmp_1_0 = ctx.forgotForm.get(\"email\")) == null ? null : tmp_1_0.invalid));\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.forgotForm.invalid);\n        }\n      },\n      dependencies: [i2.NgIf, i3.RouterLink, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ForgetpassComponent","constructor","fb","submitted","forgotForm","group","email","required","onSubmit","valid","value","console","log","alert","reset","ɵɵdirectiveInject","i1","FormBuilder","selectors","decls","vars","consts","template","ForgetpassComponent_Template","rf","ctx","ɵɵlistener","ForgetpassComponent_Template_form_ngSubmit_6_listener","ɵɵelement","ɵɵtemplate","ForgetpassComponent_small_11_Template","ɵɵadvance","ɵɵproperty","tmp_1_0","get","invalid"],"sources":["C:\\Users\\rocks\\OneDrive\\Desktop\\Angular\\AngularForm\\src\\app\\Components\\forgetpass\\forgetpass.component.ts","C:\\Users\\rocks\\OneDrive\\Desktop\\Angular\\AngularForm\\src\\app\\Components\\forgetpass\\forgetpass.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-forgetpass',\n  templateUrl: './forgetpass.component.html',\n  styleUrls: ['./forgetpass.component.css']\n})\nexport class ForgetpassComponent {\n\n  forgotForm: FormGroup;\n  submitted = false;\n\n  constructor(private fb: FormBuilder) {\n    this.forgotForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]]\n    });\n  }\n\n  onSubmit() {\n    this.submitted = true;\n    if (this.forgotForm.valid) {\n      const email = this.forgotForm.value.email;\n      console.log('Reset link sent to:', email);\n      alert('Password reset link has been sent to your email!');\n      this.forgotForm.reset();\n      this.submitted = false;\n    }\n  }\n}\n","<div class=\"container d-flex align-items-center justify-content-center min-vh-100 bg-light\">\n    <div class=\"card shadow-lg p-4 rounded-4\" style=\"width: 100%; max-width: 450px;\">\n        <h2 class=\"text-center mb-3\">Forgot Password</h2>\n        <p class=\"text-center text-muted mb-4\">Enter your email and we'll send you a reset link.</p>\n\n        <form [formGroup]=\"forgotForm\" (ngSubmit)=\"onSubmit()\">\n            <div class=\"mb-3\">\n                <label class=\"form-label\">Email address</label>\n                <input type=\"email\" class=\"form-control\" formControlName=\"email\" placeholder=\"Enter your email\">\n                <small class=\"text-danger\" *ngIf=\"submitted && forgotForm.get('email')?.invalid\">\n                    Valid email is required.\n                </small>\n            </div>\n\n            <button type=\"submit\" class=\"btn btn-primary w-100 rounded-pill\" [disabled]=\"forgotForm.invalid\">\n                Send Reset Link\n            </button>\n\n            <p class=\"text-center mt-3 text-muted\">\n                <a routerLink=\"/login\">Back to Login</a>\n            </p>\n        </form>\n    </div>\n</div>"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;ICQnDC,EAAA,CAAAC,cAAA,gBAAiF;IAC7ED,EAAA,CAAAE,MAAA,iCACJ;IAAAF,EAAA,CAAAG,YAAA,EAAQ;;;ADHxB,OAAM,MAAOC,mBAAmB;EAK9BC,YAAoBC,EAAe;IAAf,KAAAA,EAAE,GAAFA,EAAE;IAFtB,KAAAC,SAAS,GAAG,KAAK;IAGf,IAAI,CAACC,UAAU,GAAG,IAAI,CAACF,EAAE,CAACG,KAAK,CAAC;MAC9BC,KAAK,EAAE,CAAC,EAAE,EAAE,CAACX,UAAU,CAACY,QAAQ,EAAEZ,UAAU,CAACW,KAAK,CAAC;KACpD,CAAC;EACJ;EAEAE,QAAQA,CAAA;IACN,IAAI,CAACL,SAAS,GAAG,IAAI;IACrB,IAAI,IAAI,CAACC,UAAU,CAACK,KAAK,EAAE;MACzB,MAAMH,KAAK,GAAG,IAAI,CAACF,UAAU,CAACM,KAAK,CAACJ,KAAK;MACzCK,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEN,KAAK,CAAC;MACzCO,KAAK,CAAC,kDAAkD,CAAC;MACzD,IAAI,CAACT,UAAU,CAACU,KAAK,EAAE;MACvB,IAAI,CAACX,SAAS,GAAG,KAAK;;EAE1B;;;uBApBWH,mBAAmB,EAAAJ,EAAA,CAAAmB,iBAAA,CAAAC,EAAA,CAAAC,WAAA;IAAA;EAAA;;;YAAnBjB,mBAAmB;MAAAkB,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,6BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCRhC5B,EAAA,CAAAC,cAAA,aAA4F;UAEvDD,EAAA,CAAAE,MAAA,sBAAe;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACjDH,EAAA,CAAAC,cAAA,WAAuC;UAAAD,EAAA,CAAAE,MAAA,wDAAiD;UAAAF,EAAA,CAAAG,YAAA,EAAI;UAE5FH,EAAA,CAAAC,cAAA,cAAuD;UAAxBD,EAAA,CAAA8B,UAAA,sBAAAC,sDAAA;YAAA,OAAYF,GAAA,CAAAjB,QAAA,EAAU;UAAA,EAAC;UAClDZ,EAAA,CAAAC,cAAA,aAAkB;UACYD,EAAA,CAAAE,MAAA,oBAAa;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC/CH,EAAA,CAAAgC,SAAA,gBAAgG;UAChGhC,EAAA,CAAAiC,UAAA,KAAAC,qCAAA,mBAEQ;UACZlC,EAAA,CAAAG,YAAA,EAAM;UAENH,EAAA,CAAAC,cAAA,iBAAiG;UAC7FD,EAAA,CAAAE,MAAA,yBACJ;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAETH,EAAA,CAAAC,cAAA,aAAuC;UACZD,EAAA,CAAAE,MAAA,qBAAa;UAAAF,EAAA,CAAAG,YAAA,EAAI;;;;UAd1CH,EAAA,CAAAmC,SAAA,GAAwB;UAAxBnC,EAAA,CAAAoC,UAAA,cAAAP,GAAA,CAAArB,UAAA,CAAwB;UAIMR,EAAA,CAAAmC,SAAA,GAAmD;UAAnDnC,EAAA,CAAAoC,UAAA,SAAAP,GAAA,CAAAtB,SAAA,MAAA8B,OAAA,GAAAR,GAAA,CAAArB,UAAA,CAAA8B,GAAA,4BAAAD,OAAA,CAAAE,OAAA,EAAmD;UAKlBvC,EAAA,CAAAmC,SAAA,GAA+B;UAA/BnC,EAAA,CAAAoC,UAAA,aAAAP,GAAA,CAAArB,UAAA,CAAA+B,OAAA,CAA+B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}