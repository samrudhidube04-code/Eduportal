{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ManageCoursesComponent = class ManageCoursesComponent {\n  constructor() {\n    this.imageUrlInput = '';\n    this.courses = [];\n    this.newCourse = {\n      name: '',\n      description: '',\n      price: null,\n      image: ''\n    };\n  }\n  ngOnInit() {\n    // Load from localStorage if exists\n    const savedCourses = localStorage.getItem('courses');\n    if (savedCourses) {\n      this.courses = JSON.parse(savedCourses);\n    }\n  }\n  // ðŸ“¸ If admin pastes image URL\n  setImageFromUrl() {\n    this.newCourse.image = this.imageUrlInput;\n  }\n  // ðŸ“· If admin uploads from system\n  onImageSelected(event) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = () => {\n        this.newCourse.image = reader.result;\n        this.imageUrlInput = ''; // Clear manual input\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }\n  addCourse() {\n    if (this.newCourse.name && this.newCourse.description && this.newCourse.price !== null && this.newCourse.image) {\n      this.courses.push({\n        ...this.newCourse\n      });\n      localStorage.setItem('courses', JSON.stringify(this.courses));\n      this.newCourse = {\n        name: '',\n        description: '',\n        price: null,\n        image: ''\n      };\n      alert('Course added successfully!');\n    }\n  }\n  // Delete course by index\n  deleteCourse(index) {\n    if (confirm('Are you sure you want to delete this course?')) {\n      this.courses.splice(index, 1);\n      localStorage.setItem('courses', JSON.stringify(this.courses));\n      alert('Course deleted successfully!');\n    }\n  }\n  startEdit(index) {\n    this.editingIndex = index;\n    this.editedCourse = {\n      ...this.courses[index]\n    }; // create a copy\n  }\n\n  cancelEdit() {\n    this.editingIndex = null;\n    this.editedCourse = {};\n  }\n  saveEdit() {\n    if (this.editingIndex !== null) {\n      this.courses[this.editingIndex] = {\n        ...this.editedCourse\n      };\n      localStorage.setItem('courses', JSON.stringify(this.courses));\n      this.cancelEdit();\n      alert('Course updated successfully!');\n    }\n  }\n};\nManageCoursesComponent = __decorate([Component({\n  selector: 'app-manage-courses',\n  templateUrl: './manage-courses.component.html',\n  styleUrls: ['./manage-courses.component.css']\n})], ManageCoursesComponent);","map":{"version":3,"names":["Component","ManageCoursesComponent","constructor","imageUrlInput","courses","newCourse","name","description","price","image","ngOnInit","savedCourses","localStorage","getItem","JSON","parse","setImageFromUrl","onImageSelected","event","file","target","files","reader","FileReader","onload","result","readAsDataURL","addCourse","push","setItem","stringify","alert","deleteCourse","index","confirm","splice","startEdit","editingIndex","editedCourse","cancelEdit","saveEdit","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\rocks\\OneDrive\\Desktop\\Angular\\AngularForm\\src\\app\\Components\\admin\\componets\\manage-courses\\manage-courses.component.ts"],"sourcesContent":["import { ViewportScroller } from '@angular/common';\nimport { Component } from '@angular/core';\n\n\n@Component({\n  selector: 'app-manage-courses',\n  templateUrl: './manage-courses.component.html',\n  styleUrls: ['./manage-courses.component.css']\n})\nexport class ManageCoursesComponent {\n\n\n  imageUrlInput: string = '';\n  courses: any[] = [];\n\n  newCourse = {\n    name: '',\n    description: '',\n    price: null,\n    image: ''\n  };\n\n  ngOnInit() {\n    // Load from localStorage if exists\n    const savedCourses = localStorage.getItem('courses');\n    if (savedCourses) {\n      this.courses = JSON.parse(savedCourses);\n    }\n  }\n\n  // ðŸ“¸ If admin pastes image URL\n  setImageFromUrl() {\n    this.newCourse.image = this.imageUrlInput;\n  }\n\n  // ðŸ“· If admin uploads from system\n  onImageSelected(event: any) {\n    const file = event.target.files[0];\n    if (file) {\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        this.newCourse.image = reader.result as string;\n        this.imageUrlInput = ''; // Clear manual input\n      };\n\n      reader.readAsDataURL(file);\n    }\n  }\n\n  addCourse() {\n    if (\n      this.newCourse.name &&\n      this.newCourse.description &&\n      this.newCourse.price !== null &&\n      this.newCourse.image\n    ) {\n      this.courses.push({ ...this.newCourse });\n      localStorage.setItem('courses', JSON.stringify(this.courses));\n      this.newCourse = { name: '', description: '', price: null, image: '' };\n      alert('Course added successfully!');\n    }\n  }\n\n\n  // Delete course by index\n  deleteCourse(index: number) {\n    if (confirm('Are you sure you want to delete this course?')) {\n      this.courses.splice(index, 1);\n      localStorage.setItem('courses', JSON.stringify(this.courses));\n      alert('Course deleted successfully!');\n    }\n  }\n\n\n  startEdit(index: number) {\n    this.editingIndex = index;\n    this.editedCourse = { ...this.courses[index] }; // create a copy\n  }\n\n  cancelEdit() {\n    this.editingIndex = null;\n    this.editedCourse = {};\n  }\n\n  saveEdit() {\n    if (this.editingIndex !== null) {\n      this.courses[this.editingIndex] = { ...this.editedCourse };\n      localStorage.setItem('courses', JSON.stringify(this.courses));\n      this.cancelEdit();\n      alert('Course updated successfully!');\n    }\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}