{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let HomeComponent = class HomeComponent {\n  constructor(router) {\n    this.router = router;\n    this.course = {\n      id: 1,\n      name: 'Angular Basics',\n      description: 'Learn Angular with hands-on practice.'\n    };\n    this.showForm = false;\n    this.enrollData = {\n      name: '',\n      email: ''\n    };\n  }\n  handleEnrollClick() {\n    const isLoggedIn = localStorage.getItem('isLoggedIn');\n    const role = localStorage.getItem('role');\n    if (isLoggedIn !== 'true' || role !== 'user') {\n      alert('ðŸ”’ Please log in first to enroll.');\n      this.router.navigate(['/login'], {\n        queryParams: {\n          returnUrl: '/'\n        }\n      }); // Go back to home\n      return;\n    }\n    // If already logged in, show form\n    this.showForm = true;\n  }\n  submitEnrollment() {\n    const enrolledCourses = JSON.parse(localStorage.getItem('enrolledCourses') || '[]');\n    // Check if already enrolled\n    const already = enrolledCourses.find(c => c.id === this.course.id);\n    if (already) {\n      alert('âœ… You are already enrolled.');\n      return;\n    }\n    enrolledCourses.push({\n      ...this.course,\n      name: this.enrollData.name,\n      email: this.enrollData.email,\n      status: 'Active',\n      progress: 0\n    });\n    localStorage.setItem('enrolledCourses', JSON.stringify(enrolledCourses));\n    alert('ðŸŽ‰ Enrollment successful!');\n    this.showForm = false;\n    this.enrollData = {\n      name: '',\n      email: ''\n    };\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);","map":{"version":3,"names":["Component","HomeComponent","constructor","router","course","id","name","description","showForm","enrollData","email","handleEnrollClick","isLoggedIn","localStorage","getItem","role","alert","navigate","queryParams","returnUrl","submitEnrollment","enrolledCourses","JSON","parse","already","find","c","push","status","progress","setItem","stringify","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\rocks\\OneDrive\\Desktop\\Angular\\AngularForm\\src\\app\\Components\\home\\home.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent {\n\n  course = {\n    id: 1,\n    name: 'Angular Basics',\n    description: 'Learn Angular with hands-on practice.'\n  };\n\n  showForm = false;\n\n  enrollData = {\n    name: '',\n    email: ''\n  };\n\n  constructor(private router: Router) { }\n\n  handleEnrollClick() {\n    const isLoggedIn = localStorage.getItem('isLoggedIn');\n    const role = localStorage.getItem('role');\n\n    if (isLoggedIn !== 'true' || role !== 'user') {\n      alert('ðŸ”’ Please log in first to enroll.');\n      this.router.navigate(['/login'], { queryParams: { returnUrl: '/' } }); // Go back to home\n      return;\n    }\n\n    // If already logged in, show form\n    this.showForm = true;\n  }\n\n  submitEnrollment() {\n    const enrolledCourses = JSON.parse(localStorage.getItem('enrolledCourses') || '[]');\n\n    // Check if already enrolled\n    const already = enrolledCourses.find((c: any) => c.id === this.course.id);\n    if (already) {\n      alert('âœ… You are already enrolled.');\n      return;\n    }\n\n    enrolledCourses.push({\n      ...this.course,\n      name: this.enrollData.name,\n      email: this.enrollData.email,\n      status: 'Active',\n      progress: 0\n    });\n\n    localStorage.setItem('enrolledCourses', JSON.stringify(enrolledCourses));\n    alert('ðŸŽ‰ Enrollment successful!');\n    this.showForm = false;\n    this.enrollData = { name: '', email: '' };\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAQlC,WAAMC,aAAa,GAAnB,MAAMA,aAAa;EAexBC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAb1B,KAAAC,MAAM,GAAG;MACPC,EAAE,EAAE,CAAC;MACLC,IAAI,EAAE,gBAAgB;MACtBC,WAAW,EAAE;KACd;IAED,KAAAC,QAAQ,GAAG,KAAK;IAEhB,KAAAC,UAAU,GAAG;MACXH,IAAI,EAAE,EAAE;MACRI,KAAK,EAAE;KACR;EAEqC;EAEtCC,iBAAiBA,CAAA;IACf,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACrD,MAAMC,IAAI,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAEzC,IAAIF,UAAU,KAAK,MAAM,IAAIG,IAAI,KAAK,MAAM,EAAE;MAC5CC,KAAK,CAAC,mCAAmC,CAAC;MAC1C,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE;QAAEC,WAAW,EAAE;UAAEC,SAAS,EAAE;QAAG;MAAE,CAAE,CAAC,CAAC,CAAC;MACvE;;IAGF;IACA,IAAI,CAACX,QAAQ,GAAG,IAAI;EACtB;EAEAY,gBAAgBA,CAAA;IACd,MAAMC,eAAe,GAAGC,IAAI,CAACC,KAAK,CAACV,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC;IAEnF;IACA,MAAMU,OAAO,GAAGH,eAAe,CAACI,IAAI,CAAEC,CAAM,IAAKA,CAAC,CAACrB,EAAE,KAAK,IAAI,CAACD,MAAM,CAACC,EAAE,CAAC;IACzE,IAAImB,OAAO,EAAE;MACXR,KAAK,CAAC,6BAA6B,CAAC;MACpC;;IAGFK,eAAe,CAACM,IAAI,CAAC;MACnB,GAAG,IAAI,CAACvB,MAAM;MACdE,IAAI,EAAE,IAAI,CAACG,UAAU,CAACH,IAAI;MAC1BI,KAAK,EAAE,IAAI,CAACD,UAAU,CAACC,KAAK;MAC5BkB,MAAM,EAAE,QAAQ;MAChBC,QAAQ,EAAE;KACX,CAAC;IAEFhB,YAAY,CAACiB,OAAO,CAAC,iBAAiB,EAAER,IAAI,CAACS,SAAS,CAACV,eAAe,CAAC,CAAC;IACxEL,KAAK,CAAC,2BAA2B,CAAC;IAClC,IAAI,CAACR,QAAQ,GAAG,KAAK;IACrB,IAAI,CAACC,UAAU,GAAG;MAAEH,IAAI,EAAE,EAAE;MAAEI,KAAK,EAAE;IAAE,CAAE;EAC3C;CACD;AAtDYT,aAAa,GAAA+B,UAAA,EALzBhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,uBAAuB;EACpCC,SAAS,EAAE,CAAC,sBAAsB;CACnC,CAAC,C,EACWlC,aAAa,CAsDzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}