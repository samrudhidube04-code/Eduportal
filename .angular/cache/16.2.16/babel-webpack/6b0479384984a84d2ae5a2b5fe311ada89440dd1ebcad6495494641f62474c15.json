{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nexport let EnrollCourseComponent = class EnrollCourseComponent {\n  constructor(router, http) {\n    this.router = router;\n    this.http = http;\n    this.loggedInUser = null;\n    this.showForm = false;\n    this.enrollmentData = {\n      name: '',\n      email: '',\n      courseName: '',\n      price: 0\n    };\n  }\n  ngOnInit() {\n    const userData = localStorage.getItem('loggedInUser');\n    if (userData) {\n      this.loggedInUser = JSON.parse(userData);\n    }\n    if (this.course) {\n      this.enrollmentData.courseName = this.course.name;\n      this.enrollmentData.price = this.course.price;\n    }\n  }\n  openEnrollmentForm() {\n    if (!this.loggedInUser) {\n      alert('⚠️ You must be logged in to enroll.');\n      this.router.navigate(['/login']);\n      return;\n    }\n    this.enrollmentData.name = this.loggedInUser.name;\n    this.enrollmentData.email = this.loggedInUser.email;\n    this.showForm = true;\n  }\n  confirmEnrollment() {\n    if (!this.loggedInUser) {\n      alert('User not found.');\n      return;\n    }\n    const userEmail = this.loggedInUser.email;\n    this.http.get(`http://localhost:3000/users?email=${userEmail}`).subscribe(users => {\n      if (users.length === 0) {\n        alert('User not found in database.');\n        return;\n      }\n      const user = users[0];\n      const updatedCourses = user.myCourses ? [...user.myCourses, this.course] : [this.course];\n      this.http.patch(`http://localhost:3000/users/${user.id}`, {\n        myCourses: updatedCourses\n      }).subscribe(() => {\n        alert('✅ Course enrolled successfully!');\n        this.showForm = false;\n      });\n    });\n  }\n};\n__decorate([Input()], EnrollCourseComponent.prototype, \"course\", void 0);\nEnrollCourseComponent = __decorate([Component({\n  selector: 'app-enroll-course',\n  templateUrl: './enroll-course.component.html',\n  styleUrls: ['./enroll-course.component.css']\n})], EnrollCourseComponent);","map":{"version":3,"names":["Component","Input","EnrollCourseComponent","constructor","router","http","loggedInUser","showForm","enrollmentData","name","email","courseName","price","ngOnInit","userData","localStorage","getItem","JSON","parse","course","openEnrollmentForm","alert","navigate","confirmEnrollment","userEmail","get","subscribe","users","length","user","updatedCourses","myCourses","patch","id","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\rocks\\OneDrive\\Desktop\\Angular\\AngularForm\\src\\app\\Components\\enroll\\enroll.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-enroll-course',\n  templateUrl: './enroll-course.component.html',\n  styleUrls: ['./enroll-course.component.css']\n})\nexport class EnrollCourseComponent implements OnInit {\n  @Input() course: any;\n  loggedInUser: any = null;\n  showForm: boolean = false;\n\n  enrollmentData = {\n    name: '',\n    email: '',\n    courseName: '',\n    price: 0\n  };\n\n  constructor(private router: Router, private http: HttpClient) { }\n\n  ngOnInit(): void {\n    const userData = localStorage.getItem('loggedInUser');\n    if (userData) {\n      this.loggedInUser = JSON.parse(userData);\n    }\n\n    if (this.course) {\n      this.enrollmentData.courseName = this.course.name;\n      this.enrollmentData.price = this.course.price;\n    }\n  }\n\n  openEnrollmentForm() {\n    if (!this.loggedInUser) {\n      alert('⚠️ You must be logged in to enroll.');\n      this.router.navigate(['/login']);\n      return;\n    }\n\n    this.enrollmentData.name = this.loggedInUser.name;\n    this.enrollmentData.email = this.loggedInUser.email;\n    this.showForm = true;\n  }\n\n  confirmEnrollment() {\n    if (!this.loggedInUser) {\n      alert('User not found.');\n      return;\n    }\n\n    const userEmail = this.loggedInUser.email;\n\n    this.http.get<any[]>(`http://localhost:3000/users?email=${userEmail}`).subscribe(users => {\n      if (users.length === 0) {\n        alert('User not found in database.');\n        return;\n      }\n\n      const user = users[0];\n\n      const updatedCourses = user.myCourses ? [...user.myCourses, this.course] : [this.course];\n\n      this.http.patch(`http://localhost:3000/users/${user.id}`, {\n        myCourses: updatedCourses\n      }).subscribe(() => {\n        alert('✅ Course enrolled successfully!');\n        this.showForm = false;\n      });\n    });\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAEC,KAAK,QAAgB,eAAe;AASjD,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAYhCC,YAAoBC,MAAc,EAAUC,IAAgB;IAAxC,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,IAAI,GAAJA,IAAI;IAVhD,KAAAC,YAAY,GAAQ,IAAI;IACxB,KAAAC,QAAQ,GAAY,KAAK;IAEzB,KAAAC,cAAc,GAAG;MACfC,IAAI,EAAE,EAAE;MACRC,KAAK,EAAE,EAAE;MACTC,UAAU,EAAE,EAAE;MACdC,KAAK,EAAE;KACR;EAE+D;EAEhEC,QAAQA,CAAA;IACN,MAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC;IACrD,IAAIF,QAAQ,EAAE;MACZ,IAAI,CAACR,YAAY,GAAGW,IAAI,CAACC,KAAK,CAACJ,QAAQ,CAAC;;IAG1C,IAAI,IAAI,CAACK,MAAM,EAAE;MACf,IAAI,CAACX,cAAc,CAACG,UAAU,GAAG,IAAI,CAACQ,MAAM,CAACV,IAAI;MACjD,IAAI,CAACD,cAAc,CAACI,KAAK,GAAG,IAAI,CAACO,MAAM,CAACP,KAAK;;EAEjD;EAEAQ,kBAAkBA,CAAA;IAChB,IAAI,CAAC,IAAI,CAACd,YAAY,EAAE;MACtBe,KAAK,CAAC,qCAAqC,CAAC;MAC5C,IAAI,CAACjB,MAAM,CAACkB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC;;IAGF,IAAI,CAACd,cAAc,CAACC,IAAI,GAAG,IAAI,CAACH,YAAY,CAACG,IAAI;IACjD,IAAI,CAACD,cAAc,CAACE,KAAK,GAAG,IAAI,CAACJ,YAAY,CAACI,KAAK;IACnD,IAAI,CAACH,QAAQ,GAAG,IAAI;EACtB;EAEAgB,iBAAiBA,CAAA;IACf,IAAI,CAAC,IAAI,CAACjB,YAAY,EAAE;MACtBe,KAAK,CAAC,iBAAiB,CAAC;MACxB;;IAGF,MAAMG,SAAS,GAAG,IAAI,CAAClB,YAAY,CAACI,KAAK;IAEzC,IAAI,CAACL,IAAI,CAACoB,GAAG,CAAQ,qCAAqCD,SAAS,EAAE,CAAC,CAACE,SAAS,CAACC,KAAK,IAAG;MACvF,IAAIA,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;QACtBP,KAAK,CAAC,6BAA6B,CAAC;QACpC;;MAGF,MAAMQ,IAAI,GAAGF,KAAK,CAAC,CAAC,CAAC;MAErB,MAAMG,cAAc,GAAGD,IAAI,CAACE,SAAS,GAAG,CAAC,GAAGF,IAAI,CAACE,SAAS,EAAE,IAAI,CAACZ,MAAM,CAAC,GAAG,CAAC,IAAI,CAACA,MAAM,CAAC;MAExF,IAAI,CAACd,IAAI,CAAC2B,KAAK,CAAC,+BAA+BH,IAAI,CAACI,EAAE,EAAE,EAAE;QACxDF,SAAS,EAAED;OACZ,CAAC,CAACJ,SAAS,CAAC,MAAK;QAChBL,KAAK,CAAC,iCAAiC,CAAC;QACxC,IAAI,CAACd,QAAQ,GAAG,KAAK;MACvB,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ;CACD;AA/DU2B,UAAA,EAARjC,KAAK,EAAE,C,oDAAa;AADVC,qBAAqB,GAAAgC,UAAA,EALjClC,SAAS,CAAC;EACTmC,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWnC,qBAAqB,CAgEjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}