{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let LoginComponent = class LoginComponent {\n  constructor(fb, router, userserve, http) {\n    this.fb = fb;\n    this.router = router;\n    this.userserve = userserve;\n    this.http = http;\n    this.submitted = false;\n    this.loginError = '';\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required]\n    });\n  }\n  /////////////////////////////////////////////////////////////////////////////////////////////\n  onSubmit() {\n    const {\n      email,\n      password\n    } = this.loginForm.value;\n    // 1️⃣ Admin Login\n    if (this.userserve.isAdmin(email, password)) {\n      localStorage.setItem('isLoggedIn', 'true');\n      localStorage.setItem('role', 'admin');\n      const adminUser = {\n        name: 'Admin',\n        email,\n        loginTime: new Date()\n      };\n      localStorage.setItem('loggedInUser', JSON.stringify(adminUser));\n      const history = JSON.parse(localStorage.getItem('loggedUsers') || '[]');\n      history.push(adminUser);\n      localStorage.setItem('loggedUsers', JSON.stringify(history));\n      alert('Welcome Admin!');\n      this.router.navigate(['/admin']);\n      return;\n    }\n    // 2️⃣ User Login\n    this.userserve.loginUser(email, password).subscribe(users => {\n      if (users.length > 0) {\n        const user = users[0]; // matched user from JSON API\n        localStorage.setItem('isLoggedIn', 'true');\n        localStorage.setItem('role', 'user');\n        localStorage.setItem('loggedInUser', JSON.stringify(user));\n        const history = JSON.parse(localStorage.getItem('loggedUsers') || '[]');\n        history.push({\n          name: user.name,\n          email: user.email,\n          loginTime: new Date()\n        });\n        localStorage.setItem('loggedUsers', JSON.stringify(history));\n        alert('Welcome User!');\n        this.router.navigate(['/user']);\n      } else {\n        alert('Invalid email or password');\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})], LoginComponent);","map":{"version":3,"names":["Component","Validators","LoginComponent","constructor","fb","router","userserve","http","submitted","loginError","loginForm","group","email","required","password","onSubmit","value","isAdmin","localStorage","setItem","adminUser","name","loginTime","Date","JSON","stringify","history","parse","getItem","push","alert","navigate","loginUser","subscribe","users","length","user","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\rocks\\OneDrive\\Desktop\\Angular\\AngularForm\\src\\app\\Components\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { FormServiceService } from 'src/app/service/form-service.service';\nimport { User } from '../Interface/interface';\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  loginForm: FormGroup;\n  submitted = false;\n  loginError = '';\n\n  constructor(private fb: FormBuilder, private router: Router, private userserve: FormServiceService, private http: HttpClient) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', Validators.required],\n    });\n  }\n\n\n\n\n\n  /////////////////////////////////////////////////////////////////////////////////////////////\n\n  onSubmit() {\n    const { email, password } = this.loginForm.value;\n\n    // 1️⃣ Admin Login\n    if (this.userserve.isAdmin(email, password)) {\n      localStorage.setItem('isLoggedIn', 'true');\n      localStorage.setItem('role', 'admin');\n\n      const adminUser = {\n        name: 'Admin',\n        email,\n        loginTime: new Date()\n      };\n      localStorage.setItem('loggedInUser', JSON.stringify(adminUser));\n\n      const history = JSON.parse(localStorage.getItem('loggedUsers') || '[]');\n      history.push(adminUser);\n      localStorage.setItem('loggedUsers', JSON.stringify(history));\n\n      alert('Welcome Admin!');\n      this.router.navigate(['/admin']);\n      return;\n    }\n\n    // 2️⃣ User Login\n    this.userserve.loginUser(email, password).subscribe(users => {\n      if (users.length > 0) {\n        const user = users[0]; // matched user from JSON API\n\n        localStorage.setItem('isLoggedIn', 'true');\n        localStorage.setItem('role', 'user');\n        localStorage.setItem('loggedInUser', JSON.stringify(user));\n\n        const history = JSON.parse(localStorage.getItem('loggedUsers') || '[]');\n        history.push({ name: user.name, email: user.email, loginTime: new Date() });\n        localStorage.setItem('loggedUsers', JSON.stringify(history));\n\n        alert('Welcome User!');\n        this.router.navigate(['/user']);\n      } else {\n        alert('Invalid email or password');\n      }\n    });\n  }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}